edge.arrow.size = 0.05,
layout = layout_nicely(networkData),
remove.loops = T,
vertex.frame.color = "snow"
)
src    <- c("Agric", "Agric", "Auto", "Alime", "IndTr", "IndTr", "Eletr", "Petro")
target <- c("Alime", "Eletr", "Petro", "Transp", "Agric", "Petro", "IndTr", "Alime")
g <- as.matrix(as.data.frame(cbind(src, target)))
networkData <- graph.edgelist(g, directed = FALSE)
g.b <- round(igraph::betweenness(networkData, directed = FALSE ),digits = 0)
grafico <- plot.igraph(networkData,
vertex.label = g.b,
edge.color = 'black',
vertex.size = sqrt(g.b)+35,
vertex.label.color ="Black",
edge.arrow.size = 0.05,
layout = layout_nicely(networkData),
remove.loops = T,
vertex.frame.color = "snow"
)
grafico
src    <- c("Agric", "Agric", "Auto", "Alime", "IndTr", "IndTr", "Eletr", "Petro")
target <- c("Alime", "Eletr", "Petro", "Transp", "Agric", "Petro", "IndTr", "Alime")
g <- as.matrix(as.data.frame(cbind(src, target)))
networkData <- graph.edgelist(g, directed = FALSE)
g.b <- round(igraph::betweenness(networkData, directed = FALSE ),digits = 0)
grafico <- plot.igraph(networkData,
vertex.label = g.b,
edge.color = 'black',
vertex.size = sqrt(g.b)+35,
vertex.label.color ="Black",
edge.arrow.size = 0.05,
layout = layout_nicely(networkData),
remove.loops = T,
vertex.frame.color = "snow"
)
src    <- c("Agric", "Agric", "Auto", "Alime", "IndTr", "IndTr", "Eletr", "Petro")
target <- c("Alime", "Eletr", "Petro", "Transp", "Agric", "Petro", "IndTr", "Alime")
g <- as.matrix(as.data.frame(cbind(src, target)))
networkData <- graph.edgelist(g, directed = FALSE)
g.b <- round(igraph::betweenness(networkData, directed = FALSE ),digits = 0)
plot.igraph(networkData,
vertex.label = g.b,
edge.color = 'black',
vertex.size = sqrt(g.b)+35,
vertex.label.color ="Black",
edge.arrow.size = 0.05,
layout = layout_nicely(networkData),
remove.loops = T,
vertex.frame.color = "snow"
)
round(diameter(m_adj, unconnected = TRUE, weight = NA), digits = 3)
diameter(m_adj, unconnected = TRUE, weight = NA), digits = 3)
mean_distance(m_adj, directed = T, unconnected = TRUE)
igraph::closeness(m_adj, mode = 'all'))
igraph::closeness(m_adj, mode = 'all')
igraph::closeness(networkData, mode = 'all')
g.avgpl <- round(igraph::closeness(networkData, mode = 'all'),digits = 0)
plot.igraph(networkData,
vertex.label = g.b,
edge.color = 'black',
vertex.size = sqrt(g.b)+35,
vertex.label.color ="Black",
edge.arrow.size = 0.05,
layout = layout_nicely(networkData),
remove.loops = T,
vertex.frame.color = "snow"
)
plot.igraph(networkData,
vertex.label = g.b,
edge.color = 'black',
vertex.size = sqrt(g.b)+35,
vertex.label.color ="Black",
edge.arrow.size = 0.05,
layout = layout_nicely(networkData),
remove.loops = T,
vertex.frame.color = "snow"
)
plot.igraph(networkData,
vertex.label = g.avgpl,
edge.color = 'black',
vertex.size = sqrt(g.avgpl)+35,
vertex.label.color ="Black",
edge.arrow.size = 0.05,
layout = layout_nicely(networkData),
remove.loops = T,
vertex.frame.color = "snow"
)
g.avgpl <- round(igraph::closeness(networkData, mode = 'all'),digits = 3)
plot.igraph(networkData,
vertex.label = g.avgpl,
edge.color = 'black',
vertex.size = sqrt(g.avgpl)+35,
vertex.label.color ="Black",
edge.arrow.size = 0.05,
layout = layout_nicely(networkData),
remove.loops = T,
vertex.frame.color = "snow"
)
g.degree <- round(igraph::degree(networkData),digits = 3)
plot.igraph(networkData,
vertex.label = g.degree,
edge.color = 'black',
vertex.size = sqrt(g.degree)+35,
vertex.label.color ="Black",
edge.arrow.size = 0.05,
layout = layout_nicely(networkData),
remove.loops = T,
vertex.frame.color = "snow"
)
g.degree <- round(igraph::degree(networkData),digits = 3)
gName   <- paste0(local_graph, "gNet-degree", i, "_", ".png" ) # Set the name of the graph and for what file it is gonna be sent to
png(filename = gName, res = 300,units = 'cm', width = 16, height = 16) # Set the image configurations to be exported
par(cex = 1.5, mar = c(1,2.1,1.5,0.5))
plot.igraph(networkData,
vertex.label = g.degree,
edge.color = 'black',
vertex.size = sqrt(g.degree)+35,
vertex.label.color ="Black",
edge.arrow.size = 0.05,
layout = layout_nicely(networkData),
remove.loops = T,
vertex.frame.color = "snow"
)
local_graph
local_graph <- "C:/Users/NeX/Google Drive/Nex IC 2017 - Luiz Gabriel/Modelo_02/graphos/"
gName   <- paste0(local_graph, "gNet-degree", i, "_", ".png" ) # Set the name of the graph and for what file it is gonna be sent to
gName
g.degree <- round(igraph::degree(networkData),digits = 3)
gName   <- paste0(local_graph, "gNet-degree", i, "_", ".png" ) # Set the name of the graph and for what file it is gonna be sent to
png(filename = gName, res = 300,units = 'cm', width = 16, height = 16) # Set the image configurations to be exported
par(cex = 1.5, mar = c(1,2.1,1.5,0.5))
plot.igraph(networkData,
vertex.label = g.degree,
edge.color = 'black',
vertex.size = sqrt(g.degree)+35,
vertex.label.color ="Black",
edge.arrow.size = 0.05,
layout = layout_nicely(networkData),
remove.loops = T,
vertex.frame.color = "snow"
)
dev.off()
#DirData<-"C:/Users/NeX/Dropbox/Nex IC 2017 - Luiz Gabriel/Modelo"
#local_graph <- "C:/Users/Luiz Gabriel/Dropbox/Nex IC 2017 - Luiz Gabriel/Artigo/"
DirData     <- "C:/Users/NeX/Google Drive/Nex IC 2017 - Luiz Gabriel/Modelo_02"
dev.off()
dev.off()
dev.off()
g.degree <- round(igraph::degree(networkData),digits = 3)
gName   <- paste0(local_graph, "gNet-degree", i, "_", ".png" ) # Set the name of the graph and for what file it is gonna be sent to
png(filename = gName, res = 300,units = 'cm', width = 16, height = 16) # Set the image configurations to be exported
par(cex = 1.5, mar = c(1,2.1,1.5,0.5))
plot.igraph(networkData,
vertex.label = g.degree,
edge.color = 'black',
vertex.size = sqrt(g.degree)+35,
vertex.label.color ="Black",
edge.arrow.size = 0.05,
layout = layout_nicely(networkData),
remove.loops = T,
vertex.frame.color = "snow"
)
g.degree <- round(igraph::degree(networkData),digits = 3)
gName   <- paste0(local_graph, "gNet-degree", i, "_", ".png" ) # Set the name of the graph and for what file it is gonna be sent to
png(filename = gName, res = 300,units = 'cm', width = 16, height = 16) # Set the image configurations to be exported
par(cex = 1.5, mar = c(1,2.1,1.5,0.5))
plot.igraph(networkData,
vertex.label = g.degree,
edge.color = 'black',
vertex.size = sqrt(g.degree)+35,
vertex.label.color ="Black",
edge.arrow.size = 0.05,
layout = layout_nicely(networkData),
remove.loops = T,
vertex.frame.color = "snow"
)
dev.off()
dev.off()
dev.off()
g.degree <- round(igraph::degree(networkData),digits = 3)
gName   <- paste0(local_graph, "gNet-degree", i, "_", ".png" ) # Set the name of the graph and for what file it is gonna be sent to
png(filename = gName, res = 300,units = 'cm', width = 16, height = 16) # Set the image configurations to be exported
par(cex = 1.5, mar = c(1,2.1,1.5,0.5))
plot.igraph(networkData,
vertex.label = g.degree,
edge.color = 'black',
vertex.size = sqrt(g.degree)+35,
vertex.label.color ="Black",
edge.arrow.size = 0.05,
layout = layout_nicely(networkData),
remove.loops = T,
vertex.frame.color = "snow"
)
g1 <- graph( edges=c(1,2, 2,3, 3, 1), n=3, directed=F )
plot(g1)
library(tidyverse)
library(readxl)
library(igraph)
library(sna)
library(network)
library(intergraph)
library(xtable)
library(reshape)
library(ggraph)
library(data.table)
library(RColorBrewer)
library(gridExtra)
library(rlang)
library(plotly)
library(sqldf)
library(GGally)
library(grid)
#Apresentaçãop
g1 <- graph( edges=c(1,2, 2,3, 3, 1), n=3, directed=F )
plot(g1)
src    <- c("Agric", "Agric", "Auto", "Alime", "IndTr", "IndTr", "Eletr", "Petro")
target <- c("Alime", "Eletr", "Petro", "Transp", "Agric", "Petro", "IndTr", "Alime")
g <- as.matrix(as.data.frame(cbind(src, target)))
g
networkData <- graph.edgelist(g, directed = FALSE)
g.b <- round(igraph::betweenness(networkData, directed = FALSE ),digits = 0)
g.b
plot.igraph(networkData,
vertex.label = g.b,
edge.color = 'black',
vertex.size = sqrt(g.b)+35,
vertex.label.color ="Black",
edge.arrow.size = 0.05,
layout = layout_nicely(networkData),
remove.loops = T,
vertex.frame.color = "snow"
)
igraph::betweenness(networkData, directed = FALSE )
betweenness(net, directed=T, weights=NA)
g1 <- graph( edges=c(1,2, 2,3, 3, 1), n=3, directed=F )
plot(g1)
betweenness(g1, directed=T, weights=NA)
betweenness(g1, directed=F)
igraph::betweenness(g1, directed=F)
g1 <- graph( edges=c(1,2, 2,3, 3, 1, 1,4), n=3, directed=F )
plot(g1)
igraph::betweenness(g1, directed=F)
g1 <- graph( edges=c(1,2, 2,3, 3, 1, 1,4, 5,4,1,5), n=3, directed=F )
plot(g1)
igraph::betweenness(g1, directed=F)
g <- as.matrix(as.data.frame(cbind(src, target)))
g
networkData <- graph.edgelist(g, directed = FALSE)
round(igraph::betweenness(networkData, directed = FALSE ),digits = 0)
g.b <- round(igraph::betweenness(networkData, directed = FALSE ),digits = 0)
plot.igraph(networkData,
vertex.label = g.b,
edge.color = 'black',
vertex.size = sqrt(g.b)+35,
vertex.label.color ="Black",
edge.arrow.size = 0.05,
layout = layout_nicely(networkData),
remove.loops = T,
vertex.frame.color = "snow"
)
src    <- c( "Agric", "Auto", "Alime", "IndTr", "IndTr", "Eletr", "Petro")
target <- c( "Eletr", "Petro", "Transp", "Agric", "Petro", "IndTr", "Alime")
g <- as.matrix(as.data.frame(cbind(src, target)))
networkData <- graph.edgelist(g, directed = FALSE)
g.b <- round(igraph::betweenness(networkData, directed = FALSE ),digits = 0)
plot.igraph(networkData,
vertex.label = g.b,
edge.color = 'black',
vertex.size = sqrt(g.b)+35,
vertex.label.color ="Black",
edge.arrow.size = 0.05,
layout = layout_nicely(networkData),
remove.loops = T,
vertex.frame.color = "snow"
)
g.b
src    <- c( "Auto", "Alime", "IndTr", "IndTr", "Eletr", "Petro")
target <- c( "Petro", "Transp", "Agric", "Petro", "IndTr", "Alime")
g <- as.matrix(as.data.frame(cbind(src, target)))
networkData <- graph.edgelist(g, directed = FALSE)
g.b <- round(igraph::betweenness(networkData, directed = FALSE ),digits = 0)
g.b
src    <- c("Agric", "Agric", "Agric", "Alime", "Alime", "IndTr", "IndTr", "Eletr", "Petro")
target <- c("Alime", "IndTr", "Eletr", "Petro", "Transp", "Agric", "IndTr", "IndTr", "Alime")
g <- as.matrix(as.data.frame(cbind(src, target)))
networkData <- graph.edgelist(g, directed = FALSE)
g.b <- round(igraph::betweenness(networkData, directed = FALSE ),digits = 0)
g.b
plot.igraph(networkData,
vertex.label = g.b,
edge.color = 'black',
vertex.size = sqrt(g.b)+35,
vertex.label.color ="Black",
edge.arrow.size = 0.05,
layout = layout_nicely(networkData),
remove.loops = T,
vertex.frame.color = "snow"
)
src    <- c("Agric", "Agric", "Agric", "Alime", "Alime", "IndTr", "Eletr")
target <- c("Alime", "IndTr", "Eletr", "Petro", "Transp", "Agric", "IndTr")
g <- as.matrix(as.data.frame(cbind(src, target)))
networkData <- graph.edgelist(g, directed = FALSE)
g.b <- round(igraph::betweenness(networkData, directed = FALSE ),digits = 0)
g.b
plot.igraph(networkData,
vertex.label = g.b,
edge.color = 'black',
vertex.size = sqrt(g.b)+35,
vertex.label.color ="Black",
edge.arrow.size = 0.05,
layout = layout_nicely(networkData),
remove.loops = T,
vertex.frame.color = "snow"
)
src    <- c("Agric", "Agric", "Agric", "Alime", "Alime", "Eletr")
target <- c("Alime", "IndTr", "Eletr", "Petro", "Transp", "IndTr")
g <- as.matrix(as.data.frame(cbind(src, target)))
networkData <- graph.edgelist(g, directed = FALSE)
g.b <- round(igraph::betweenness(networkData, directed = FALSE ),digits = 0)
plot.igraph(networkData,
vertex.label = g.b,
edge.color = 'black',
vertex.size = sqrt(g.b)+35,
vertex.label.color ="Black",
edge.arrow.size = 0.05,
layout = layout_nicely(networkData),
remove.loops = T,
vertex.frame.color = "snow"
)
local_graph
local_graph
i
paste0(local_graph, "gNet-betweenness", i, "_", ".png" )
gName   <- paste0(local_graph, "gNet-betweenness", i, "_", ".png" ) # Set the name of the graph and for what file it is gonna be sent to
png(filename = gName, res = 300,units = 'cm', width = 16, height = 16) # Set the image configurations to be exported
par(cex = 1.5, mar = c(1,2.1,1.5,0.5))
plot.igraph(networkData,
vertex.label = g.b,
edge.color = 'black',
vertex.size = sqrt(g.b)+35,
vertex.label.color ="Black",
edge.arrow.size = 0.05,
layout = layout_nicely(networkData),
remove.loops = T,
vertex.frame.color = "snow"
)
gName
gName   <- paste0("C:\Users\Avell\Google Drive\Nex IC 2017 - Luiz Gabriel\03.Monografia 2019\02.Artigo\graphos", "\gNet-degree", i, "_", ".png" ) # Set the name of the graph and for what file it is gonna be sent to
DirData      <- "C:/Users/Avell/Google Drive/Nex IC 2017 - Luiz Gabriel/03.Monografia 2019/01.Scrip_R" # Where yout scritp is
#local_graph  <- paste0(DirData,"/02.graphos_tidyverse/") # Where the graphs are going to be saved
local_graph  <- "C:/Users/Avell/Google Drive/Nex IC 2017 - Luiz Gabriel/03.Monografia 2019/02.Artigo/graphos/" # Where the graphs are going to be saved
g <- as.matrix(as.data.frame(cbind(src, target)))
networkData <- graph.edgelist(g, directed = FALSE)
g.b <- round(igraph::betweenness(networkData, directed = FALSE ),digits = 0)
gName   <- paste0(local_graph, "gNet-betweenness", i, "_", ".png" ) # Set the name of the graph and for what file it is gonna be sent to
png(filename = gName, res = 300,units = 'cm', width = 16, height = 16) # Set the image configurations to be exported
par(cex = 1.5, mar = c(1,2.1,1.5,0.5))
plot.igraph(networkData,
vertex.label = g.b,
edge.color = 'black',
vertex.size = sqrt(g.b)+35,
vertex.label.color ="Black",
edge.arrow.size = 0.05,
layout = layout_nicely(networkData),
remove.loops = T,
vertex.frame.color = "snow"
)
g.degree <- round(igraph::degree(networkData),digits = 3)
gName   <- paste0(local_graph, "gNet-degree", i, "_", ".png" ) # Set the name of the graph and for what file it is gonna be sent to
png(filename = gName, res = 300,units = 'cm', width = 16, height = 16) # Set the image configurations to be exported
par(cex = 1.5, mar = c(1,2.1,1.5,0.5))
plot.igraph(networkData,
vertex.label = g.degree,
edge.color = 'black',
vertex.size = sqrt(g.degree)+35,
vertex.label.color ="Black",
edge.arrow.size = 0.05,
layout = layout_nicely(networkData),
remove.loops = T,
vertex.frame.color = "snow"
)
dev.off()
dev.off()
dev.off()
dev.off()
data.frame(igraph::eigen_centrality(networkData, directed = F, weights = NA)$vector)
round(assortativity(networkData, igraph::degree(networkData, mode="all"),directed = F), digits = 3)
igraph::degree(networkData, mode="all")
assortativity(networkData, igraph::degree(networkData, mode="all"),directed = F)
round(diameter(networkData, unconnected = TRUE, weight = NA), digits = 3) # VER
diameter(networkData, unconnected = TRUE, weight = NA)
edge_density(networkData,loops = TRUE)
assortativity(networkData, igraph::degree(networkData, mode="all"),directed = F)
edge_density(networkData,loops = FALSE)
assortativity(networkData, igraph::degree(networkData, mode="all"),directed = F)
igraph::degree(networkData, mode="all")
assortdegree      <- round(assortativity(networkData, igraph::degree(networkData, mode="all"),directed = F), digits = 3) #
assortdegree
assortativity_degree(networkData, directed = FALSE)
m_net
library(tidyverse)
library(readxl)
library(igraph)
library(sna)
library(network)
library(intergraph)
library(xtable)
library(reshape)
library(ggraph)
library(data.table)
library(RColorBrewer)
library(gridExtra)
library(rlang)
library(plotly)
library(sqldf)
library(GGally)
library(grid)
DirData      <- "C:/Users/Avell/Google Drive/Nex IC 2017 - Luiz Gabriel/03.Monografia 2019/01.Scrip_R" # Where yout scritp is
#local_graph  <- paste0(DirData,"/02.graphos_tidyverse/") # Where the graphs are going to be saved
local_graph  <- "C:/Users/Avell/Google Drive/Nex IC 2017 - Luiz Gabriel/03.Monografia 2019/02.Artigo/graphos/" # Where the graphs are going to be saved
local_matrix <- paste0(DirData,"/00.Matrizes/") # Where the matrix that are going to be used are
# Filters of the networks
vlr_filtro <- 0.05  # Filters every just what is grater then the max value of matrix * the filter value
mode       <- "plus"
#set notation that is gonna be used by R
options(scipen=999,digits=1)
options(warn=-1)
# List of dada set's used in the analysis
Countries <- c(list.files(paste0(DirData, "/00.Matrizes"),pattern = ".xlsx"))
# Rewriting the countries names to be used in the graphs
CountryName <- case_when(
# "SOUTH"
Countries %like% "BRA" ~ "Brasil",
Countries %like% "RUS" ~ "Rússia",
Countries %like% "IND" ~ "Índia",
Countries %like% "CHN" ~ "China",
Countries %like% "MEX" ~ "México",
# "NORTH"
Countries %like% "KOR" ~ "Corea",
Countries %like% "DEU" ~ "Alemanha",
Countries %like% "GBR" ~ "Reino Unido",
Countries %like% "NOR" ~ "Noruega",
Countries %like% "USA" ~ "Estados Unidos",
TRUE ~ substr(Countries,1,3) # Yout can add a countrie's name as you want
)
#Create the layout of the data frames that is going to collect graph statistics
{
country          <- 1
ano              <- 1
numedges         <- 1
avdegree         <- 1
diameter         <- 1
density          <- 1
assortdegree     <- 1
meandist         <- 1
closeness        <- 1
centrality_value <- 1
betweenness      <- 1
Avgcluster_coef  <- 1
mean_hub         <- 1
pagerank         <- 1
data_0           <- data.frame(country, ano, numedges, avdegree, diameter, density,
assortdegree, #meandist,
betweenness #, Avgcluster_coef
)
}
#
names <-"a"
value <- 1
ano   <- 1
country <- 1
#set
Betwenness_best0     <- data.frame(names, value, ano, country)
eig_Centrality_best0 <- data.frame(names, value, ano, country)
hub_best0            <- data.frame(names, value, ano, country)
page_rank_best0      <- data.frame(names, value, ano, country)
degree_distribution0 <- data.frame(value, ano, country)
#Degree
setor         <- c("a")
weigth_dg     <- 1
all_dg        <- 1
in_dg         <- 1
out_dg        <- 1
ano           <- 1
degree_table0 <- data.frame(setor, weigth_dg, all_dg, in_dg, out_dg, ano, country)
for (c in 1:10){
# Import the database and save each of the IO's (2000 a 2014)
file  <- Countries[c]
for (j in 0:14){
print(paste("Importing matrix ",Countries[c],"Year ", 2000+j))
ini <- paste0("E", 3 + j*120)
fim <- paste0("BI", 58 + j*120)
ran <- paste0(ini, ":", fim)
mIO <- read_excel(paste0(local_matrix,file), na="na", sheet = "National IO-tables", range = ran, col_names = F)
NameObj <- paste0("m", 2000 + j)
assign(NameObj, mIO)
}
# Remove variables that are not gonna be used any more
rm(ini,fim,ran,i,NameObj,mIO)
# Sector names
setor_name <- c( "Agropecuária" , "Ext Madeira" , "Pesca" , "Mineração" , "I Alimenticia" , "I Textil" ,
"I Madeira" , "I Papel" , "Midia" , "I Petro Refinado" , "I Quimica" , "I Farmaceutica" ,
"I Plastico" , "I Min N Met" , "I Metais" , "I Prod Metalicos" , "I Eletronica" , "I Elêtrica" ,
"I Maq e Equip" , "I Veiculos" , "I Tranporte" , "I Móveis" , "Rep e Inst MaqEquip" , "Fornec Serv" ,
"Água" , "Saneamento" , "Construção" , "Atac Varej Veic" , "Atacado" , "Varejo" , "Transp Terrestre" ,
"Transp Água" , "Transp Aéreo" , "Apoio Transp" , "Correios" , "Hotel e Rest" , "Publicação" , "Rádio e TV" ,
"Tecomunicações" , "Informática" , "Serv Financeiros" , "Seguros" , "Outros Serv Fin" , "Imoveis" ,
"Ativi Legais" , "Arquit e Eng" , "Ciência e Pesquisa" , "Marketing" , "Ativ Prof" , "Serv Adm ",
"Adm Pública" , "Educação" , "Saúde" , "Outros Serviços" , "Servi Doméstico" , "Organizações",
"Final_Consumption")
print(paste("Networking on", CountryName[c],i))
